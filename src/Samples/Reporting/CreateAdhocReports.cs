using System;
using System.Collections.Generic;
using AuthenticationSdk.core;
using CyberSource.Client;
using Newtonsoft.Json;

namespace Cybersource_rest_samples_dotnet.Samples.Reporting
{
    public class CreateAdhocReports
    {
        public static void Run(IReadOnlyDictionary<string, string> configDictionary)
        {
            const string organizationId = "uday_wf";

            //var requestObj = new Request();

            //requestObj.ReportDefinitionName = "ChargebackAndRetrievalDetailClass";
            //requestObj.Timezone = "GMT";
            //requestObj.ReportMimeType = "text/csv";
            //requestObj.ReportName = "TRR_133";
            //requestObj.ReportStartTime = "11/22/2017 12:30:00 PM";
            //requestObj.ReportEndTime = "11/23/2017 12:30:00 PM";

            ////var reportFiltersObj = new List<string>();
            ////reportFiltersObj.Add("Application.Name": [");

            ////requestObj.ReportFilters = reportFiltersObj;

            //var reportPreferencesObj = new ReportPreferences();

            //reportPreferencesObj.SignedAmounts = "true";
            //reportPreferencesObj.FieldNameConvention = "SOAPI";
            //requestObj.ReportPreferences = reportPreferencesObj;

            var reportFieldsObj = new List<string>();
            reportFieldsObj.Add("PaymentData.AuthorizationType");
            reportFieldsObj.Add("PaymentData.AuthorizationCode");
            reportFieldsObj.Add("PaymentData.AVSResult");
            reportFieldsObj.Add("PaymentData.CurrencyCode");
            reportFieldsObj.Add("PaymentData.AVSResultMapped");
            reportFieldsObj.Add("PaymentData.CVResult");
            reportFieldsObj.Add("PaymentData.ProcessorResponseCode");
            reportFieldsObj.Add("PaymentData.NumberOfInstallments");
            reportFieldsObj.Add("PaymentData.ACHVerificationResult");
            reportFieldsObj.Add("PaymentData.ACHVerificationResultMapped");
            reportFieldsObj.Add("PaymentData.BalanceAmount");
            reportFieldsObj.Add("PaymentData.BalanceCurrencyCode");
            reportFieldsObj.Add("PaymentData.RequestedAmount");
            reportFieldsObj.Add("PaymentData.RequestedAmountCurrencyCode");
            reportFieldsObj.Add("PaymentData.EVEmail");
            reportFieldsObj.Add("PaymentData.EVEmailRaw");
            reportFieldsObj.Add("PaymentData.EVName");
            reportFieldsObj.Add("PaymentData.EVNameRaw");
            reportFieldsObj.Add("PaymentData.EVPhoneNumber");
            reportFieldsObj.Add("PaymentData.EVPhoneNumberRaw");
            reportFieldsObj.Add("PaymentData.EVStreet");
            reportFieldsObj.Add("PaymentData.EVStreetRaw");
            reportFieldsObj.Add("PaymentData.EVPostalCode");
            reportFieldsObj.Add("PaymentData.EVPostalCodeRaw");
            reportFieldsObj.Add("PaymentData.BinNumber");
            reportFieldsObj.Add("LineItems.FulfillmentType");
            reportFieldsObj.Add("LineItems.Quantity");
            reportFieldsObj.Add("LineItems.UnitPrice");
            reportFieldsObj.Add("LineItems.TaxAmount");
            reportFieldsObj.Add("LineItems.MerchantProductSku");
            reportFieldsObj.Add("LineItems.ProductName");
            reportFieldsObj.Add("LineItems.ProductCode");
            reportFieldsObj.Add("LineItems.InvoiceNumber");
            reportFieldsObj.Add("BillTo.NameSuffix");
            reportFieldsObj.Add("BillTo.FirstName");
            reportFieldsObj.Add("BillTo.LastName");
            reportFieldsObj.Add("BillTo.MiddleName");
            reportFieldsObj.Add("BillTo.Address1");
            reportFieldsObj.Add("BillTo.Address2");
            reportFieldsObj.Add("BillTo.City");
            reportFieldsObj.Add("BillTo.State");
            reportFieldsObj.Add("BillTo.Zip");
            reportFieldsObj.Add("BillTo.Country");
            reportFieldsObj.Add("BillTo.CompanyName");
            reportFieldsObj.Add("BillTo.Email");
            reportFieldsObj.Add("BillTo.Title");
            reportFieldsObj.Add("BillTo.Phone");
            reportFieldsObj.Add("PaymentMethod.CardType");
            reportFieldsObj.Add("PaymentMethod.ExpirationMonth");
            reportFieldsObj.Add("PaymentMethod.ExpirationYear");
            reportFieldsObj.Add("PaymentMethod.StartMonth");
            reportFieldsObj.Add("PaymentMethod.StartYear");
            reportFieldsObj.Add("PaymentMethod.IssueNumber");
            reportFieldsObj.Add("PaymentMethod.AccountSuffix");
            reportFieldsObj.Add("PaymentMethod.AccountType");
            reportFieldsObj.Add("PaymentMethod.BoletoNumber");
            reportFieldsObj.Add("PaymentData.CardCategory");
            reportFieldsObj.Add("PaymentData.CardCategoryCode");
            reportFieldsObj.Add("PaymentMethod.WalletType");
            reportFieldsObj.Add("PaymentMethod.CheckNumber");
            reportFieldsObj.Add("PaymentMethod.MandateId");
            reportFieldsObj.Add("PaymentMethod.MandateType");
            reportFieldsObj.Add("PaymentMethod.SignatureDate");
            reportFieldsObj.Add("Travel.CompleteRoute");
            reportFieldsObj.Add("Travel.JourneyType");
            reportFieldsObj.Add("Travel.DepartureDateTime");
            reportFieldsObj.Add("Travel.PassengerFirstName");
            reportFieldsObj.Add("Travel.PassengerLastName");
            reportFieldsObj.Add("Travel.PassengerId");
            reportFieldsObj.Add("Travel.PassengerStatus");
            reportFieldsObj.Add("Travel.PassengerType");
            reportFieldsObj.Add("Travel.PassengerPhone");
            reportFieldsObj.Add("Travel.PassengerEmail");
            reportFieldsObj.Add("Application.Rcode");
            reportFieldsObj.Add("Application.Rflag");
            reportFieldsObj.Add("Application.Rmsg");
            reportFieldsObj.Add("ShipTo.Address1");
            reportFieldsObj.Add("ShipTo.Address2");
            reportFieldsObj.Add("ShipTo.City");
            reportFieldsObj.Add("ShipTo.State");
            reportFieldsObj.Add("ShipTo.Zip");
            reportFieldsObj.Add("ShipTo.Country");
            reportFieldsObj.Add("ShipTo.Phone");
            reportFieldsObj.Add("ShipTo.CompanyName");
            reportFieldsObj.Add("Application.ReasonCode");
            reportFieldsObj.Add("Risk.Factors");
            reportFieldsObj.Add("Risk.HostSeverity");
            reportFieldsObj.Add("Risk.Score");
            reportFieldsObj.Add("Risk.ConsumerPasswordProvided");
            reportFieldsObj.Add("Risk.LostPassword");
            reportFieldsObj.Add("Risk.RepeatCustomer");
            reportFieldsObj.Add("Risk.CookiesAccepted");
            reportFieldsObj.Add("Risk.ConsumerLoyalty");
            reportFieldsObj.Add("Risk.ConsumerPromotions");
            reportFieldsObj.Add("Risk.GiftWrap");
            reportFieldsObj.Add("Risk.ReturnsAccepted");
            reportFieldsObj.Add("Risk.ProductRisk");
            reportFieldsObj.Add("Risk.AppliedThreshold");
            reportFieldsObj.Add("Risk.AppliedTimeHedge");
            reportFieldsObj.Add("Risk.AppliedVelocityHedge");
            reportFieldsObj.Add("Risk.AppliedHostHedge");
            reportFieldsObj.Add("Risk.AppliedCategoryGift");
            reportFieldsObj.Add("Risk.AppliedCategoryTime");
            reportFieldsObj.Add("Risk.AppliedAVS");
            reportFieldsObj.Add("Risk.CodeValue");
            reportFieldsObj.Add("Risk.AppliedCV");
            reportFieldsObj.Add("Risk.BinAccountType");
            reportFieldsObj.Add("Risk.BinScheme");
            reportFieldsObj.Add("Risk.BinIssuer");
            reportFieldsObj.Add("Risk.BinCountry");
            reportFieldsObj.Add("Risk.IPCity");
            reportFieldsObj.Add("Risk.IPCountry");
            reportFieldsObj.Add("Risk.IPRoutingMethod");
            reportFieldsObj.Add("Risk.IPState");
            reportFieldsObj.Add("Risk.DeviceFingerPrint");
            reportFieldsObj.Add("Risk.CookiesEnabled");
            reportFieldsObj.Add("Risk.FlashEnabled");
            reportFieldsObj.Add("Risk.ImagesEnabled");
            reportFieldsObj.Add("Risk.JavascriptEnabled");
            reportFieldsObj.Add("Risk.ProxyIPAddress");
            reportFieldsObj.Add("Risk.ProxyIPAddressActivities");
            reportFieldsObj.Add("Risk.ProxyIPAddressAttributes");
            reportFieldsObj.Add("Risk.ProxyServerType");
            reportFieldsObj.Add("Risk.TrueIPAddress");
            reportFieldsObj.Add("Risk.TrueIPaddressActivities");
            reportFieldsObj.Add("Risk.TrueIPAddressAttributes");
            reportFieldsObj.Add("Risk.TrueIPAddressCountry");
            reportFieldsObj.Add("Risk.TrueIPAddressCity");
            reportFieldsObj.Add("Risk.CodeType");
            reportFieldsObj.Add("Risk.TimeLocal");
            reportFieldsObj.Add("BillTo.IPAddress");
            reportFieldsObj.Add("BillTo.HostName");
            reportFieldsObj.Add("BillTo.UserName");
            reportFieldsObj.Add("BillTo.CustomerID");
            reportFieldsObj.Add("PaymentData.Amount");
            reportFieldsObj.Add("PaymentData.PaymentRequestID");
            reportFieldsObj.Add("PaymentData.PaymentProcessor");
            reportFieldsObj.Add("PaymentData.TotalTaxAmount");
            reportFieldsObj.Add("PaymentData.EventType");
            reportFieldsObj.Add("PaymentData.GrandTotal");
            reportFieldsObj.Add("PaymentData.ECI");
            reportFieldsObj.Add("PaymentData.AAV_CAVV");
            reportFieldsObj.Add("PaymentData.XID");
            reportFieldsObj.Add("Profile.ProfileMode");
            reportFieldsObj.Add("Profile.ProfileDecision");
            reportFieldsObj.Add("Profile.RuleName");
            reportFieldsObj.Add("Profile.RuleDecision");
            reportFieldsObj.Add("Shipping.Method");
            reportFieldsObj.Add("Shipping.Carrier");
            reportFieldsObj.Add("Request.RequestID");
            reportFieldsObj.Add("Request.SubscriptionID");
            reportFieldsObj.Add("Request.Comments");
            reportFieldsObj.Add("PaymentData.TransactionRefNumber");
            reportFieldsObj.Add("PaymentData.eCommerceIndicator");
            reportFieldsObj.Add("Request.Source");
            reportFieldsObj.Add("Request.User");
            reportFieldsObj.Add("Request.TransactionDate");
            reportFieldsObj.Add("LineItems.Number");
            reportFieldsObj.Add("Request.MerchantReferenceNumber");
            reportFieldsObj.Add("Application.Name");
            reportFieldsObj.Add("Profile.Name");
            reportFieldsObj.Add("MerchantDefinedData.Field1");
            reportFieldsObj.Add("MerchantDefinedData.Field2");
            reportFieldsObj.Add("MerchantDefinedData.Field3");
            reportFieldsObj.Add("MerchantDefinedData.Field4");
            reportFieldsObj.Add("MerchantDefinedData.Field5");
            reportFieldsObj.Add("MerchantDefinedData.Field6");
            reportFieldsObj.Add("MerchantDefinedData.Field7");
            reportFieldsObj.Add("MerchantDefinedData.Field8");
            reportFieldsObj.Add("MerchantDefinedData.Field9");
            reportFieldsObj.Add("MerchantDefinedData.Field10");
            reportFieldsObj.Add("MerchantDefinedData.Field11");
            reportFieldsObj.Add("MerchantDefinedData.Field12");
            reportFieldsObj.Add("MerchantDefinedData.Field13");
            reportFieldsObj.Add("MerchantDefinedData.Field14");
            reportFieldsObj.Add("MerchantDefinedData.Field15");
            reportFieldsObj.Add("MerchantDefinedData.Field16");
            reportFieldsObj.Add("MerchantDefinedData.Field17");
            reportFieldsObj.Add("MerchantDefinedData.Field18");
            reportFieldsObj.Add("MerchantDefinedData.Field19");
            reportFieldsObj.Add("MerchantDefinedData.Field20");
            reportFieldsObj.Add("ShipTo.FirstName");
            reportFieldsObj.Add("ShipTo.LastName");
            reportFieldsObj.Add("Request.MerchantID");
            reportFieldsObj.Add("Travel.Number");
            reportFieldsObj.Add("PaymentData.ReconciliationID");
            reportFieldsObj.Add("PaymentData.TargetAmount");
            reportFieldsObj.Add("PaymentData.TargetCurrency");
            reportFieldsObj.Add("PaymentData.ExchangeRate");
            reportFieldsObj.Add("PaymentData.ExchangeRateDate");
            reportFieldsObj.Add("PaymentData.DCCIndicator");
            reportFieldsObj.Add("PaymentMethod.BankCode");
            reportFieldsObj.Add("PaymentMethod.BankAccountName");
            reportFieldsObj.Add("PaymentData.AuthIndicator");
            reportFieldsObj.Add("PaymentData.AuthReversalResult");
            reportFieldsObj.Add("PaymentData.AuthReversalAmount");
            reportFieldsObj.Add("PaymentData.CardPresent");
            reportFieldsObj.Add("PaymentData.POSEntryMode");
            reportFieldsObj.Add("PaymentData.EMVRequestFallBack");
            reportFieldsObj.Add("Request.PartnerOriginalTransactionID");
            reportFieldsObj.Add("Request.TerminalSerialNumber");
            reportFieldsObj.Add("PaymentData.POSCatLevel");
            reportFieldsObj.Add("Request.PartnerSDKVersion");
            reportFieldsObj.Add("PaymentData.CardVerificationMethod");
            reportFieldsObj.Add("PaymentData.POSEnvironment");
            reportFieldsObj.Add("PaymentData.TerminalIDAlternate");
            reportFieldsObj.Add("PaymentData.RoutingNetworkType");
            reportFieldsObj.Add("PaymentData.StoreAndForwardIndicator");
            reportFieldsObj.Add("PaymentData.PinType");
            reportFieldsObj.Add("PaymentData.IssuerResponseCode");
            reportFieldsObj.Add("PaymentData.AcquirerMerchantNumber");
            reportFieldsObj.Add("PaymentData.AcquirerMerchantID");
            reportFieldsObj.Add("PaymentData.PaymentProductCode");
            reportFieldsObj.Add("PaymentData.NetworkCode");
            reportFieldsObj.Add("PaymentData.MandateReferenceNumber");
            reportFieldsObj.Add("PaymentData.ProcessorTransactionID");
            reportFieldsObj.Add("PaymentData.ProcessorMID");
            reportFieldsObj.Add("PaymentData.SubMerchantCity");
            reportFieldsObj.Add("PaymentData.SubMerchantCountry");
            reportFieldsObj.Add("PaymentData.SubMerchantEmail");
            reportFieldsObj.Add("PaymentData.SubMerchantID");
            reportFieldsObj.Add("PaymentData.SubMerchantName");
            reportFieldsObj.Add("PaymentData.SubMerchantPhone");
            reportFieldsObj.Add("PaymentData.SubMerchantPostalCode");
            reportFieldsObj.Add("PaymentData.SubMerchantState");
            reportFieldsObj.Add("PaymentData.SubMerchantStreet");
            reportFieldsObj.Add("ChargebackAndRetrieval.ARN");
            reportFieldsObj.Add("ChargebackAndRetrieval.MerchantCategoryCode");
            reportFieldsObj.Add("ChargebackAndRetrieval.TransactionType");
            reportFieldsObj.Add("ChargebackAndRetrieval.CaseNumber");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackAmount");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackCurrency");
            reportFieldsObj.Add("ChargebackAndRetrieval.CaseIdentifier");
            reportFieldsObj.Add("ChargebackAndRetrieval.CaseType");
            reportFieldsObj.Add("ChargebackAndRetrieval.CaseTime");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackTime");
            reportFieldsObj.Add("ChargebackAndRetrieval.AdjustmentAmount");
            reportFieldsObj.Add("ChargebackAndRetrieval.AdjustmentCurrency");
            reportFieldsObj.Add("ChargebackAndRetrieval.FeeAmount");
            reportFieldsObj.Add("ChargebackAndRetrieval.FeeCurrency");
            reportFieldsObj.Add("ChargebackAndRetrieval.FinancialImpact");
            reportFieldsObj.Add("ChargebackAndRetrieval.FinancialImpactType");
            reportFieldsObj.Add("ChargebackAndRetrieval.PartialIndicator");
            reportFieldsObj.Add("ChargebackAndRetrieval.DocumentIndicator");
            reportFieldsObj.Add("ChargebackAndRetrieval.RespondByDate");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackReasonCode");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackReasonCodeDescription");
            reportFieldsObj.Add("ChargebackAndRetrieval.ResolvedToIndicator");
            reportFieldsObj.Add("ChargebackAndRetrieval.ResolutionTime");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackMessage");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackOriginalAmount");
            reportFieldsObj.Add("ChargebackAndRetrieval.ChargebackOriginalCurrency");
            reportFieldsObj.Add("BillTo.PersonalID");
            reportFieldsObj.Add("BillTo.CompanyTaxID");
            reportFieldsObj.Add("PaymentData.ProcessorResponseID");
            reportFieldsObj.Add("PaymentData.ProcessorTID");
            reportFieldsObj.Add("PaymentData.NetworkTransactionID");
            reportFieldsObj.Add("PaymentMethod.BoletoBarCodeNumber");
            reportFieldsObj.Add("Sender.SenderReferenceNumber");
            reportFieldsObj.Add("Recipient.RecipientBillingAmount");
            reportFieldsObj.Add("Recipient.RecipientBillingCurrency");
            reportFieldsObj.Add("Recipient.FirstName");
            reportFieldsObj.Add("Recipient.MiddleInitial");
            reportFieldsObj.Add("Recipient.ReferenceNumber");
            reportFieldsObj.Add("Recipient.LastName");
            reportFieldsObj.Add("Recipient.Address");
            reportFieldsObj.Add("Recipient.City");
            reportFieldsObj.Add("Recipient.State");
            reportFieldsObj.Add("Recipient.Country");
            reportFieldsObj.Add("Recipient.PostalCode");
            reportFieldsObj.Add("Recipient.PhoneNumber");
            reportFieldsObj.Add("Recipient.DOB");
            reportFieldsObj.Add("Sender.Address");
            reportFieldsObj.Add("Sender.City");
            reportFieldsObj.Add("Sender.State");
            reportFieldsObj.Add("Sender.PostalCode");
            reportFieldsObj.Add("Sender.Country");
            reportFieldsObj.Add("Sender.SourceOfFunds");
            reportFieldsObj.Add("Sender.FirstName");
            reportFieldsObj.Add("Sender.MiddleInitial");
            reportFieldsObj.Add("Sender.LastName");
            reportFieldsObj.Add("Sender.PhoneNumber");
            reportFieldsObj.Add("Sender.DOB");
            reportFieldsObj.Add("BatchFiles.BatchFileID");
            reportFieldsObj.Add("Device.DeviceID");
            reportFieldsObj.Add("Check.AccountEncoderID");
            reportFieldsObj.Add("Check.SecCode");
            reportFieldsObj.Add("Check.BankTransitNumber");
            reportFieldsObj.Add("BankInfo.Address");
            reportFieldsObj.Add("BankInfo.BranchCode");
            reportFieldsObj.Add("BankInfo.City");
            reportFieldsObj.Add("BankInfo.Country");
            reportFieldsObj.Add("BankInfo.Name");
            reportFieldsObj.Add("BankInfo.SwiftCode");
            reportFieldsObj.Add("FundTransfer.BankCheckDigit");
            reportFieldsObj.Add("FundTransfer.IbanIndicator");
            reportFieldsObj.Add("Token.TokenCode");
            reportFieldsObj.Add("Token.NetworkTokenTransType");

            //requestObj.ReportFields = reportFieldsObj;

            //var merchantConfig = new MerchantConfig(configDictionary)
            //{
            //    RequestType = "POST",
            //    RequestTarget = $"/reporting/v3/reports?organizationId={organizationId}",
            //    RequestJsonData = JsonConvert.SerializeObject(requestObj)
            //};

            try
            {
                Console.WriteLine("No Implementation");

                //var configurationSwagger = new ApiClient().CallAuthenticationHeader(merchantConfig);
                //var apiInstance = new ReportsApi(configurationSwagger);
                //var result = apiInstance.CreateReport();
                //Console.WriteLine(result);
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception on calling the API: " + e.Message);
            }
        }
    }
}